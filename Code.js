// Import the OpenAI package to interact with the OpenAI API
const OpenAI = require('openai');

// Set the API key for authentication; replace "<ENTER RETRIEVED OPENAI API>" with your actual API key
const openai = new OpenAI({
  apiKey: "<ENTER RETRIEVED OPENAI API>",
});

// This function takes a user query as input and returns a response generated by the OpenAI GPT-3.5-turbo model.
async function getResponse(query) {
  try {
    // Create a chat completion using the createChatCompletion method.
    // The 'model' parameter specifies which model to use, here it's "gpt-3.5-turbo".
    // The 'messages' parameter is an array of objects that simulates a conversation
    // with roles such as 'user' and their respective content.
    const completion = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        { role: "user", content: query }, // The query provided by the user
      ],
    });

    // Return the generated response from the assistant
    return completion.choices[0].message.content;
  } catch (error) {
    // Handle errors such as network issues or API call errors
    console.error("Error fetching response from OpenAI API:", error);
    return "An error occurred while generating a response.";
  }
}

// Example usage
getResponse("Hello! How are you?").then(response => console.log(response));
